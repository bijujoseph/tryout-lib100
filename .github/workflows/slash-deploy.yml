name: Crazy

on:
  issues:
    types: [labeled]

jobs:

  slashdeploy:
    name: Slash Deployer
    runs-on: ubuntu-latest
    steps:

      - name: Debug Action
        uses: hmarr/debug-action@v1.0.0

      - name: Parse slash command
        uses: actions/github-script@v2
        id: slashCommand
        with:
          script: |
            let issue = context.payload.issue;
            let ast = issue.body.trim().split(' ');
            let labels = issue.labels.map(l => l.name);
            console.log("labels >>>> ", labels);
            let isSlashDeploy = ast[0] == '/deploy' && labels.indexOf('deploy') > -1;
            if (isSlashDeploy) {
              let env = ast[2];
              let strategy = ast[3];
              let location = ast[4];
              let isRelease = (strategy === 'release' || strategy == 'tag');
              if (isRelease && location.indexOf('tags') < 0) location = 'tags/' + loaction;
              return ({env, strategy, location});
            }
            return {};

      - name: Get result
        run: echo "${{steps.slashCommand.outputs.result}}"

      - name: Get result strategy
        run: echo "${{steps.slashCommand.outputs.result.strategy}}"


