name: Crazy

on:
  issues:
    types: [labeled]

jobs:

  slashdeploy:
    name: Slash Deployer
    runs-on: ubuntu-latest
    steps:

      - name: Parse Slash Command
        uses: actions/github-script@v2
        id: slashCommand
        with:
          result-encoding: string
          script: |
            let issue = context.payload.issue;
            let ast = issue.body.trim().split(' ');
            console.log('body:', issue.body);
            let labels = issue.labels.map(l => l.name);
            let isSlashDeploy = ast[0] == '/deploy' && labels.indexOf('SE_QA_DEPLOY') > -1;
            if (isSlashDeploy) {
              let env = ast[2];
              let strategy = ast[3];
              let branch = (strategy == 'release') ? `tags/${ast[4]}`: ast[4];
              core.exportVariable('SLASH_DEPLOY_ENV', env);
              core.exportVariable('SLASH_DEPLOY_STRATEGY', strategy);
              core.exportVariable('SLASH_DEPLOY_BRANCH', branch);
              console.log(`env: ${env}, strategy: ${strategy}, branch: ${branch}`);
            }
            core.exportVariable('SLASH_DEPLOY', isSlashDeploy);
            console.log(`isSlashDeploy: ${isSlashDeploy}`);

      - name: Get result
        run: |
          echo $SLASH_DEPLOY
          echo $SLASH_DEPLOY_ENV
          echo $SLASH_DEPLOY_STRATEGY
          echo $SLASH_DEPLOY_BRANCH


      - name: Show
        if: env.SLASH_DEPLOY == 'true'
        run: |
          echo $SLASH_DEPLOY

      - name: Show2
        if: env.SLASH_DEPLOY == 'false'
        run: |
          echo $SLASH_DEPLOY_STRATEGY

      - name: Checkout Codebase
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ env.SLASH_DEPLOY_BRANCH }}

#      - name: Change Ref
#        run: |
#          git fetch --all --tags
#          git checkout $SLASH_DEPLOY_BRANCH

      - name: Show Cat
        run: |
          cat package.json
