name: Crazy

on:
  issues:
    types: [labeled]

jobs:

  slashdeploy:
    name: Slash Deployer
    runs-on: ubuntu-latest
    steps:

      - name: Parse slash command
        uses: actions/github-script@v2
        id: slashCommand
        with:
          result-encoding: string
          script: |
            let issue = context.payload.issue;
            let ast = issue.body.trim().split(' ');
            let labels = issue.labels.map(l => l.name);
            let isSlashDeploy = ast[0] == '/deploy' && labels.indexOf('deploy') > -1;
            if (isSlashDeploy) {
              core.exportVariable('SLASH_DEPLOY_ENV', ast[2]);
              core.exportVariable('SLASH_DEPLOY_STRATEGY', ast[3]);
              core.exportVariable('SLASH_DEPLOY_BRANCH', ast[4]);
              core.debug(`env: ${ast[2]}, strategy: ${ast[3]}, branch: ${ast[4]}`);
            }
            core.exportVariable('SLASH_DEPLOY', isSlashDeploy);
            core.debug(`isSlashDeploy: ${isSlashDeploy}`);

      - name: Get result
        run: |
          echo $SLASH_DEPLOY
          echo $SLASH_DEPLOY_ENV
          echo $SLASH_DEPLOY_STRATEGY
          echo $SLASH_DEPLOY_BRANCH


      - name: Show
        if: env.SLASH_DEPLOY == 'true'
        run: |
          echo $SLASH_DEPLOY

      - name: Show2
        if: env.SLASH_DEPLOY == 'false'
        run: |
          echo $SLASH_DEPLOY_STRATEGY
